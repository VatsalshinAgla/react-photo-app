{"version":3,"sources":["components/CardImage.js","App.js","reportWebVitals.js","index.js"],"names":["CardImage","image","className","src","urls","regular","App","useState","images","setImages","pageNo","setPageNo","url","fetchImages","a","Axios","get","data","console","log","useEffect","map","id","aria-label","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAYeA,EAVG,SAAC,GAAe,IAAD,EAAZC,EAAY,EAAZA,MACnB,OACE,mCACE,qBAAKC,UAAU,iCAAf,SACE,qBAAKC,IAAG,UAAEF,EAAMG,YAAR,aAAE,EAAYC,QAASH,UAAU,mBC+ElCI,EA9EH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEIC,EAAG,gEANM,8CAMN,iBAA2EF,EAA3E,qCAEDG,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,IAAMC,IAAIJ,GADf,gBACVK,EADU,EACVA,KACRC,QAAQC,IAAIF,GACZR,EAAUQ,GAHQ,2CAAH,qDAcjBG,qBAAU,WACRP,MACC,CAACD,IAgCJ,OACE,mCACE,sBAAKV,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACGM,EAAOa,KAAI,SAAApB,GAAK,OACf,qBACEC,UAAU,uCADZ,SAIE,cAAC,EAAD,CAA0BD,MAAOA,GAAjBA,EAAMqB,KAFjBrB,EAAMqB,SAOjB,qBAAKpB,UAAU,MAAf,SACE,qBAAKA,UAAU,mDAAf,SACE,qBAAKA,UAAU,cAAf,SA7CR,qBAAKqB,aAAW,aAAhB,SACE,qBAAIrB,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAYsB,QAAS,WAVnCd,EAAS,GAAGC,EAAUD,EAAS,IAU/B,SACE,qBAAKR,UAAU,YAAf,wBAEF,oBACEA,UAAW,cAA2B,IAAXQ,EAAe,SAAW,IACrDc,QAAS,kBAAMb,EAAU,IAF3B,SAIE,qBAAKT,UAAU,YAAf,iBAEF,oBAAIA,UAAW,cAA2B,IAAXQ,EAAe,SAAW,IAAzD,SACE,qBAAKR,UAAU,YAAYsB,QAAS,kBAAMb,EAAU,IAApD,iBAIF,oBACET,UAAW,cAA2B,IAAXQ,EAAe,SAAW,IACrDc,QAAS,kBAAMb,EAAU,IAF3B,SAIE,qBAAKT,UAAU,YAAf,iBAEF,oBAAIA,UAAU,YAAYsB,QAAS,WAlCnCd,GAAU,GAAGC,EAAUD,EAAS,IAkChC,SACE,qBAAKR,UAAU,YAAf,qCC3CKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf721494.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CardImage = ({ image }) => {\r\n  return (\r\n    <>\r\n      <div className=\"card mt-2 border-dark border-2\">\r\n        <img src={image.urls?.regular} className=\"img-fluid\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardImage;\r\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from 'axios';\nimport CardImage from './components/CardImage';\n\nconst apiKey = 'ldEOch1ylhz3dJ6gv5chlrJ9vqLPjZDZN-Mk3p-hWwI';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [pageNo, setPageNo] = useState(1);\n\n  let url = `https://api.unsplash.com/photos?query=india&client_id=${apiKey}&page=${pageNo}&per_page=18&orientation=squarish`;\n\n  const fetchImages = async () => {\n    const { data } = await Axios.get(url);\n    console.log(data);\n    setImages(data);\n  };\n\n  const incPage = () => {\n    if (pageNo <= 3) setPageNo(pageNo + 1);\n  };\n\n  const decPage = () => {\n    if (pageNo > 1) setPageNo(pageNo - 1);\n  };\n\n  useEffect(() => {\n    fetchImages();\n  }, [url]);\n\n  const pagination = () => (\n    <nav aria-label=\"pagination\">\n      <ul className=\"pagination\">\n        <li className=\"page-item\" onClick={() => decPage()}>\n          <div className=\"page-link\">Previous</div>\n        </li>\n        <li\n          className={'page-item ' + (pageNo === 1 ? 'active' : '')}\n          onClick={() => setPageNo(1)}\n        >\n          <div className=\"page-link\">1</div>\n        </li>\n        <li className={'page-item ' + (pageNo === 2 ? 'active' : '')}>\n          <div className=\"page-link\" onClick={() => setPageNo(2)}>\n            2\n          </div>\n        </li>\n        <li\n          className={'page-item ' + (pageNo === 3 ? 'active' : '')}\n          onClick={() => setPageNo(3)}\n        >\n          <div className=\"page-link\">3</div>\n        </li>\n        <li className=\"page-item\" onClick={() => incPage()}>\n          <div className=\"page-link\">Next</div>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {images.map(image => (\n            <div\n              className=\"col-lg-4 col-md-6 col-sm-6 col-xs-12\"\n              key={image.id}\n            >\n              <CardImage key={image.id} image={image} />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-6 col-md-6 offset-lg-4 offset-md-4\">\n            <div className=\"text-center\">{pagination()}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}